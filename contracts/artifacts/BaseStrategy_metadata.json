{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "convertDustToEarned",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "data",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "vaultChef",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "want",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "earned",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "masterChef",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "maxiWant",
								"type": "address"
							}
						],
						"internalType": "struct StrategyLogic.Addresses",
						"name": "addresses",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "uniRouterAddress",
								"type": "address"
							},
							{
								"internalType": "uint16",
								"name": "controllerFee",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "rewardRate",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "buyBackRate",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "withdrawFeeFactor",
								"type": "uint16"
							},
							{
								"internalType": "uint16",
								"name": "tolerance",
								"type": "uint16"
							},
							{
								"internalType": "address",
								"name": "govAddress",
								"type": "address"
							}
						],
						"internalType": "struct StrategyLogic.Settings",
						"name": "settings",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "address[]",
								"name": "earnedToWmatic",
								"type": "address[]"
							},
							{
								"internalType": "address[]",
								"name": "earnedToUsdc",
								"type": "address[]"
							},
							{
								"internalType": "address[]",
								"name": "earnedToFish",
								"type": "address[]"
							},
							{
								"internalType": "address[]",
								"name": "earnedToToken0",
								"type": "address[]"
							},
							{
								"internalType": "address[]",
								"name": "earnedToToken1",
								"type": "address[]"
							},
							{
								"internalType": "address[]",
								"name": "token0ToEarned",
								"type": "address[]"
							},
							{
								"internalType": "address[]",
								"name": "token1ToEarned",
								"type": "address[]"
							},
							{
								"internalType": "address[]",
								"name": "earnedToMaxi",
								"type": "address[]"
							}
						],
						"internalType": "struct StrategyLogic.Paths",
						"name": "paths",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "sharesTotal",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "burnedAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint64",
						"name": "lastEarnBlock",
						"type": "uint64"
					},
					{
						"internalType": "uint24",
						"name": "pid",
						"type": "uint24"
					},
					{
						"internalType": "enum StratType",
						"name": "stratType",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_wantAmt",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "earn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "panic",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "resetAllowances",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_govAddress",
						"type": "address"
					}
				],
				"name": "setGov",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "_controllerFee",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "_rewardRate",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "_buyBackRate",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "_withdrawFeeFactor",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "_tolerance",
						"type": "uint16"
					},
					{
						"internalType": "address",
						"name": "_uniRouterAddress",
						"type": "address"
					}
				],
				"name": "setSettings",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpanic",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vaultSharesTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "wantLockedTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_wantAmt",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"vaults-v1/contracts/BaseStrategy.sol": "BaseStrategy"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 999999
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163",
				"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro"
			]
		},
		"@openzeppelin/contracts/security/Pausable.sol": {
			"keccak256": "0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b",
			"license": "MIT",
			"urls": [
				"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd",
				"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a",
			"license": "MIT",
			"urls": [
				"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd",
				"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a",
			"license": "MIT",
			"urls": [
				"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14",
				"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d",
			"license": "MIT",
			"urls": [
				"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd",
				"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a",
			"license": "MIT",
			"urls": [
				"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e",
				"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c",
				"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0x49ebdac5d515aebb95168564158940b79d7d5d12fbfe59cec546a00d57fee64a",
			"license": "MIT",
			"urls": [
				"bzz-raw://c02d3ba19711bffdb7aa33ff3107cfd17902c82640837ef0de2e327515f4f70d",
				"dweb:/ipfs/QmdR7JUXpD5X7eXkc24bRtNj3e7ahs8RC8s25cu7X14GHU"
			]
		},
		"vaults-v1/contracts/BaseStrategy.sol": {
			"keccak256": "0xbf6b3f9ef503e2631936c2f4daed6ab62e56c951cd35d89e98436c4419910326",
			"license": "MIT",
			"urls": [
				"bzz-raw://92a108f440d1effaf32ac212429065270da4f355aaf970c2afbb067ace2313b5",
				"dweb:/ipfs/QmaX8yDQW7mkHMKC6Qh4Rk5fEUuHVL9EZaSJQyZSHN2RMo"
			]
		},
		"vaults-v1/contracts/libs/IMasterchef.sol": {
			"keccak256": "0x6a2b76a1f0a3ac61ebf4112c1a2915f6e03708f6d87f5403e9547f86bd6efd11",
			"license": "MIT",
			"urls": [
				"bzz-raw://51ea6c4270ca3b41fa31d7d636b2778bdbbc7ab84d0fcecf7bc3849f91eaa44f",
				"dweb:/ipfs/QmNMpqkBCVT3X7WuH2HwfA1nr6Bu6rVF9RTQpuLXpn9QjB"
			]
		},
		"vaults-v1/contracts/libs/IStrategyFish.sol": {
			"keccak256": "0x47db6681adffc6188f5301007f60967b57709bc6165e301c40c7e56aa77a490a",
			"license": "MIT",
			"urls": [
				"bzz-raw://5ce012100112143969cba71426ee46da6c8b8a7b7055d42d00d2e87e5853613e",
				"dweb:/ipfs/QmRVc9mqeGfeuiWrLyZeM2NGoiX8cfPhiuNNTm7tcNjusU"
			]
		},
		"vaults-v1/contracts/libs/IUniPair.sol": {
			"keccak256": "0x18db10c4956f8924791879b151319ae39b90cc2baf767a943b290317d39521d2",
			"license": "MIT",
			"urls": [
				"bzz-raw://ddc063cbf21cb266d25084204e43124187fa5c0e944bb71ea37987e4cacd23d4",
				"dweb:/ipfs/QmeeVLK61fSRYReupTpG2L9rwowrGP4egJfwoyVasrXvFy"
			]
		},
		"vaults-v1/contracts/libs/IUniRouter01.sol": {
			"keccak256": "0x450778b9c14a200deb06e415b7d66bae2a9d09ec94a45ebafdaf2cdb0945a910",
			"license": "MIT",
			"urls": [
				"bzz-raw://ef637d6122da031f8149b65092412624170517f983b21fc124506b1e7864ed71",
				"dweb:/ipfs/QmbgEtcysDJZLZRzKErso6hxTD5LGWRfQmReFLDNNC2eWa"
			]
		},
		"vaults-v1/contracts/libs/IUniRouter02.sol": {
			"keccak256": "0x9483f46667c7de038c6857f908a7d2d110fbbf9748876b6a9314191e24bc895d",
			"license": "MIT",
			"urls": [
				"bzz-raw://1b825fb00fa27304eb84eb03521889517b84fa1d954965a801fa3e4de5d361bb",
				"dweb:/ipfs/QmWvaWmPaBpL5TVSBLKJRnWE5GuFGWYA1i1tSKVQFLyPyS"
			]
		},
		"vaults-v1/contracts/libs/IVaultHealer.sol": {
			"keccak256": "0xa5042ee06017ac08f914c8daa593f4d2a69a94b875c6719f96e72589c227ba95",
			"license": "MIT",
			"urls": [
				"bzz-raw://83b411e44916de65cae173474cf317b3ac8a5616cd5301b2b3cf7fd2e8b6e403",
				"dweb:/ipfs/QmPtyVxVkX6uSX1C7vejJxMQgHHg973dBQjNNt8dvLytd2"
			]
		},
		"vaults-v1/contracts/libs/StrategyLogic.sol": {
			"keccak256": "0xd2ab0c4f59fa2e2b85817618cee311de124cb6ce7f5163ff1b903ba87d013789",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a1b91164daedb04eabb53b52b0eb0e9470529f383f4106f5f414f553544ab53",
				"dweb:/ipfs/QmesX8NreqhXtfRDZANZFnz6Cm2MmJjypcQspCqSCXkA4K"
			]
		}
	},
	"version": 1
}